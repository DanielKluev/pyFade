name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
            python-version: "3.11"
            
      - name: Install system dependencies for PyQt6
        run: |
            sudo apt-get update
            sudo apt-get install -y libegl1 libgl1 libxkbcommon-x11-0 xvfb
            sudo apt-get install -y libxcb-xinerama0 libxcb-cursor0 libxcb-shape0
            
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'pyproject.toml') }}
            restore-keys: |
              ${{ runner.os }}-pip-
            
      - name: Install Python dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            
      - name: Install development dependencies
        run: |
            pip install -e ".[dev]"